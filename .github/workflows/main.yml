# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [14.x, 16.x]
        
    container: ubuntu
    
    services:
      mydb:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Verify MySQL connection from container 
        run: |
          apt-get update
          apt-get install -y mysql-client
          mysql --host pengo -uroot -e "SHOW DATABASES"
          
      - name: Create env file
        run: |
          touch .env
          echo PORT="3333" >> .env
          echo APP_KEY=${{secrets.AppKey}} >> .env
          echo DB_CONNECTION="mysql" >> .env
          echo MYSQL_HOST="localhost" >> .env
          echo MYSQL_PORT="3306" >> .env
          echo MYSQL_USER="root" >> .env
          echo MYSQL_PASSWORD="" >> .env
          echo MYSQL_DB_NAME="pengo" >> .env
          echo REDIS_CONNECTION="local" >> .env
          echo REDIS_HOST="127.0.0.1" >> .env
          echo REDIS_PORT="6379" >> .env
          echo REDIS_PASSWORD="" >> .env
          cat .env

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
              node-version: ${{ matrix.node-version }}
              cache: 'npm'
      - run: npm install
      - run: npm run test

      
