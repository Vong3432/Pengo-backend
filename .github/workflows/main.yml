# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [14.x, 16.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3306 # Optional, default value is 3306. The port of host
          container port: 3306 # Optional, default value is 3306. The port of container
          character set server: 'utf8' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
          collation server: 'utf8_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
          mysql version: '8.0' # Optional, default value is "latest". The version of the MySQL
          mysql database: 'pengo' # Optional, default value is "test". The specified database which will be create
          mysql root password: ${{ secrets.RootPassword }} # Required if "mysql user" is empty, default is empty. The root superuser password
          mysql user: 'developer' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
          mysql password: ${{ secrets.DatabasePassword }} # Required if "mysql user" exists. The password for the "mysql user"
          
      - name: Create env file
        run: |
          touch .env
          echo PORT="3333" >> .env
          echo APP_KEY=${{secrets.AppKey}} >> .env
          echo DB_CONNECTION="mysql" >> .env
          echo MYSQL_HOST="localhost" >> .env
          echo MYSQL_PORT="3306" >> .env
          echo MYSQL_USER="developer" >> .env
          echo MYSQL_PASSWORD="" >> .env
          echo MYSQL_DB_NAME="pengo" >> .env
          echo REDIS_CONNECTION="local" >> .env
          echo REDIS_HOST="127.0.0.1" >> .env
          echo REDIS_PORT="6379" >> .env
          echo REDIS_PASSWORD="" >> .env
          cat .env

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
              node-version: ${{ matrix.node-version }}
              cache: 'npm'
      - run: npm install
      - run: npm run test

      
